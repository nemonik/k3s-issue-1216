apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik
  namespace: kube-system

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: traefik
rules:
  - apiGroups:
    - ""
    resources:
    - pods
    - services
    - endpoints
    - secrets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    resources:
    - ingresses
    verbs:
    - get
    - list
    - watch

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: traefik
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik
subjects:
- kind: ServiceAccount
  name: traefik
  namespace: kube-system

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: traefik
  name: traefik
  namespace: kube-system
spec:
  externalTrafficPolicy: Cluster
  ports:
  - name: http
    port: 8082
    targetPort: http
  selector:
    app: traefik
  type: LoadBalancer

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: traefik
  name: traefik
  namespace: kube-system
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik
    spec:
      containers:
      - name: traefik
        image: traefik:{{ traefik_version }}
        imagePullPolicy: IfNotPresent
        args:
        - --api
        - --kubernetes
        - --logLevel=DEBUG
        ports:
        - containerPort: 80
          name: http
        - containerPort: 8080
          name: admin
        - containerPort: 443
          name: https
        resources: {}
      restartPolicy: Always
      serviceAccount: traefik
      serviceAccountName: traefik
      terminationGracePeriodSeconds: 60

---

apiVersion: v1
kind: Service
metadata:
  name: traefik-web-ui
  namespace: kube-system
spec:
  ports:
    - name: admin
      targetPort: admin
      port: 8083
  selector:
    app: traefik
  type: LoadBalancer
  externalTrafficPolicy: Cluster
