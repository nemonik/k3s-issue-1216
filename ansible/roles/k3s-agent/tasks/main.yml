---
# tasks file for k3s-agent

# Copyright (C) 2019 Michael Joseph Walsh - All Rights Reserved
# You may use, distribute and modify this code under the
# terms of the the license.
#
# You should have received a copy of the license with
# this file. If not, please email <mjwalsh@nemonik.com>

- name: ensure /home/{{ ansible_user_id }}/k3s exists
  file:
    path: /home/{{ ansible_user_id }}/k3s
    state: directory
  tags:
    - k3s-agent

- name: populate service facts
  service_facts:
  tags:
    - k3s-agent

- debug:
    msg: K3s installed!
  when: 
    "'k3s' in services"
  tags:
    - k3s-agent

- name: install and spin up k3s agent, if needed
  block:
  - name: ensure /var/lib/rancher/k3s/agent/images/ exists
    become: yes
    file:
      path: /var/lib/rancher/k3s/agent/images/
      state: directory

  - name: install airgap images
    become: yes
    unarchive:
      src: https://github.com/rancher/k3s/releases/download/{{ k3s_version }}/k3s-airgap-images-amd64.tar
      dest: /var/lib/rancher/k3s/agent/images/
      remote_src: yes
      creates: /var/lib/rancher/k3s/agent/images/manifest.json
    retries: "{{ default_retries }}"
    delay: "{{ default_delay }}"
    register: result
    until: result is succeeded

  - name: emplace install_k3s script
    get_url:
      url: https://get.k3s.io
      dest: /home/{{ ansible_user_id }}/k3s/install_k3s.sh
      mode: u=rwx,g=r,o=r
    retries: 60
    delay: 5
    register: result
    until: result is succeeded

  - name: install K3s as an agent
    become: yes
    shell: INSTALL_K3S_VERSION={{ k3s_version }} K3S_URL=https://{{ hostvars['server']['ansible_host'] }}:6443 K3S_CLUSTER_SECRET={{ k3s_cluster_secret }} INSTALL_K3S_EXEC="--flannel-iface={{ k3s_flannel_iface }}  --docker" /home/{{ ansible_user_id }}/k3s/install_k3s.sh agent
   
  - name: alias `kubectl` to `k3s kubectl`
    become: yes
    copy:
      dest: /etc/profile.d/alias_kubectl.sh
      content: |
        alias kubectl="k3s kubectl"
  when:  
    "'k3s' not in services"
  tags:
    - k3s-agent

- name: ensure K3s is started
  become: yes
  service:
    name: k3s-agent
    state: started
  tags:
    - k3s-agent

- name: ensure {{ ansible_user_id }} can access Kubernetes
  block:
  - name: ensure the {{ ansible_user_id }} user has an kubeconfig.yml file to access kubernetes
    shell: scp -qp -oStrictHostKeyChecking=no -i /home/{{ ansible_user_id }}/.ssh/id_rsa {{ ansible_user_id }}@{{ hostvars['server']['ansible_host'] }}:/home/{{ ansible_user_id }}/kubeconfig.yml /home/{{ ansible_user_id }}/kubeconfig.yml

  - name: chown and fix permissions on /home/{{ ansible_user_id }}/kubeconfig.yml 
    file:
      path: /home/{{ ansible_user_id }}/kubeconfig.yml
      owner: "{{ ansible_user_id }}"
      group: "{{ ansible_user_id }}"
      mode: u+rw,g+r,o-rwx

  - name: ensure KUBECONFIG is removed from {{ ansible_user_id }}'s bash_profile
    lineinfile:
      dest: /home/{{ ansible_user_id }}/.bash_profile
      regexp: '^export KUBECONFIG'
      state: absent

  - name: ensure KUBECONFIG is in {{ ansible_user_id }}'s bash_profile
    lineinfile:
      dest:  /home/{{ ansible_user_id }}/.bash_profile
      line: 'export KUBECONFIG="/home/{{ ansible_user_id }}/kubeconfig.yml"'
      insertafter: EOF
  tags:
    - k3s-agent
